diff --git a/modules/odm_georef/CMakeLists.txt b/modules/odm_georef/CMakeLists.txt
index ca003eb..821ab39 100644
--- a/modules/odm_georef/CMakeLists.txt
+++ b/modules/odm_georef/CMakeLists.txt
@@ -4,15 +4,15 @@ cmake_minimum_required(VERSION 2.8)
 # Set pcl dir to the input spedified with option -DPCL_DIR="path"
 set(PCL_DIR "PCL_DIR-NOTFOUND" CACHE "PCL_DIR" "Path to the pcl installation directory")
 set(OPENCV_DIR "OPENCV_DIR-NOTFOUND" CACHE "OPENCV_DIR" "Path to the opencv installation directory")
-set(PROJ4_INCLUDE_DIR "/usr/include/" CACHE "PROJ4_INCLUDE_DIR" "Path to the proj4 inlcude directory")
-find_library(PROJ4_LIBRARY "libproj.so" PATHS "/usr/lib" "/usr/lib/x86_64-linux-gnu")
+find_path(PROJ4_INCLUDE_DIR proj.h /usr/include)
+find_library(PROJ4_LIBRARY "libproj.so" PATHS "${PROJECT_SOURCE_DIR}/../../SuperBuild/install/lib")
 #set(PROJ4_LIBRARY "/usr/lib/x86_64-linux-gnu/libproj.so" CACHE "PROJ4_LIBRARY" "Path to the proj4 library directory")
 
 # Add compiler options.
 add_definitions(-Wall -Wextra -Wconversion -pedantic -std=c++11)
 
 # Find pcl at the location specified by PCL_DIR
-find_package(VTK 6.0 REQUIRED)
+find_package(VTK REQUIRED)
 find_package(PCL 1.8 HINTS "${PCL_DIR}/share/pcl-1.8")
 
 # Find OpenCV at the default location
diff --git a/modules/odm_orthophoto/CMakeLists.txt b/modules/odm_orthophoto/CMakeLists.txt
index 6494abb..ac59378 100644
--- a/modules/odm_orthophoto/CMakeLists.txt
+++ b/modules/odm_orthophoto/CMakeLists.txt
@@ -9,7 +9,7 @@ set(OPENCV_DIR "OPENCV_DIR-NOTFOUND" CACHE "OPENCV_DIR" "Path to the OPENCV inst
 add_definitions(-Wall -Wextra)
 
 # Find pcl at the location specified by PCL_DIR
-find_package(VTK 6.0 REQUIRED)
+find_package(VTK REQUIRED)
 find_package(PCL 1.8 HINTS "${PCL_DIR}/share/pcl-1.8" REQUIRED)
 
 # Find OpenCV at the default location
diff --git a/modules/odm_slam/CMakeLists.txt b/modules/odm_slam/CMakeLists.txt
index 082534d..86ee3eb 100644
--- a/modules/odm_slam/CMakeLists.txt
+++ b/modules/odm_slam/CMakeLists.txt
@@ -8,9 +8,15 @@ set(OPENCV_DIR "OPENCV_DIR-NOTFOUND" CACHE "OPENCV_DIR" "Path to the opencv inst
 add_definitions(-Wall -Wextra)
 
 # Find pcl at the location specified by PCL_DIR
-find_package(VTK 6.0 REQUIRED)
+find_package(VTK REQUIRED)
 find_package(PCL 1.8 HINTS "${PCL_DIR}/share/pcl-1.8" REQUIRED)
 
+# Find OpenGL
+find_package(OpenGL REQUIRED)
+
+# Find GLEW
+find_package(GLEW REQUIRED)
+
 # Find OpenCV at the default location
 find_package(OpenCV HINTS "${OPENCV_DIR}" REQUIRED)
 
@@ -39,4 +45,4 @@ aux_source_directory("./src" SRC_LIST)
 
 # Add exectuteable
 add_executable(${PROJECT_NAME} ${SRC_LIST})
-target_link_libraries(odm_slam ${OpenCV_LIBS} ORB_SLAM2 pangolin)
+target_link_libraries(odm_slam ${OpenCV_LIBS} ${OPENGL_LIBRARIES} ${GLEW_LIBRARIES} ORB_SLAM2 pangolin)
diff --git a/modules/odm_slam/src/OdmSlam.cpp b/modules/odm_slam/src/OdmSlam.cpp
index 1fe7505..a6a680d 100644
--- a/modules/odm_slam/src/OdmSlam.cpp
+++ b/modules/odm_slam/src/OdmSlam.cpp
@@ -74,11 +74,11 @@ int main(int argc, char **argv) {
     double T = 0.1;  // Seconds between frames
     cv::Mat im;
     int num_frames = cap.get(CV_CAP_PROP_FRAME_COUNT);
-    for(int ni = 0;; ++ni){
+    for(int ni = 0; ni < num_frames; ++ni) {
         std::cout << "processing frame " << ni << "/" << num_frames << std::endl;
         // Get frame
         bool res = false;
-        for (int trial = 0; !res && trial < 20; ++trial) {
+        for (int trial = 0; !res && trial < 200; ++trial) {
             std::cout << "trial " << trial << std::endl;
             res = cap.read(im);
         }
diff --git a/opendm/context.py b/opendm/context.py
index e49660f..46d2345 100644
--- a/opendm/context.py
+++ b/opendm/context.py
@@ -7,8 +7,8 @@ import multiprocessing
 scripts_path = os.path.abspath(os.path.dirname(__file__))
 root_path, _ = os.path.split(scripts_path)
 
-superbuild_path = os.path.join(root_path, 'SuperBuild')
-superbuild_bin_path = os.path.join(superbuild_path, 'install', 'bin')
+superbuild_path = os.environ['CONDA_PREFIX']
+superbuild_bin_path = os.path.join(superbuild_path, 'bin')
 tests_path = os.path.join(root_path, 'tests')
 tests_data_path = os.path.join(root_path, 'tests/test_data')
 
@@ -17,29 +17,29 @@ pyopencv_path = os.path.join(superbuild_path, 'install/lib/python2.7/dist-packag
 sys.path.append(pyopencv_path)
 
 # define opensfm path
-opensfm_path = os.path.join(superbuild_path, "src/opensfm")
+opensfm_path = superbuild_path
 
 # define orb_slam2 path
-orb_slam2_path = os.path.join(superbuild_path, "src/orb_slam2")
+orb_slam2_path = superbuild_path
 
 # define mve join_paths
-makescene_path = os.path.join(superbuild_path, 'src', 'elibs', 'mve', 'apps', 'makescene', 'makescene') #TODO: don't install in source
-dmrecon_path = os.path.join(superbuild_path, 'src', 'elibs', 'mve', 'apps', 'dmrecon', 'dmrecon')
-scene2pset_path = os.path.join(superbuild_path, 'src', 'elibs', 'mve', 'apps', 'scene2pset', 'scene2pset')
+makescene_path = os.path.join(superbuild_path, 'bin', 'makescene')
+dmrecon_path = os.path.join(superbuild_path, 'bin', 'dmrecon')
+scene2pset_path = os.path.join(superbuild_path, 'bin', 'scene2pset')
 
-poisson_recon_path = os.path.join(superbuild_path, 'src', 'PoissonRecon', 'Bin', 'Linux', 'PoissonRecon')
-dem2mesh_path = os.path.join(superbuild_path, 'src', 'dem2mesh', 'dem2mesh')
-dem2points_path = os.path.join(superbuild_path, 'src', 'dem2points', 'dem2points')
+poisson_recon_path = os.path.join(superbuild_path, 'bin', 'PoissonRecon')
+dem2mesh_path = os.path.join(superbuild_path, 'bin', 'dem2mesh')
+dem2points_path = os.path.join(superbuild_path, 'bin', 'dem2points')
 
 # define mvstex path
-mvstex_path = os.path.join(superbuild_path, "install/bin/texrecon")
+mvstex_path = os.path.join(superbuild_path, 'bin', 'texrecon')
 
 # define txt2las path
-txt2las_path = os.path.join(superbuild_path, 'src/las-tools/bin')
-pdal_path = os.path.join(superbuild_path, 'build/pdal/bin')
+txt2las_path = os.path.join(superbuild_path, 'bin')
+pdal_path = os.path.join(superbuild_path, 'bin')
 
 # define odm modules path
-odm_modules_path = os.path.join(root_path, "build/bin")
+odm_modules_path = os.path.join(superbuild_path, 'bin')
 odm_modules_src_path = os.path.join(root_path, "modules")
 
 settings_path = os.path.join(root_path, 'settings.yaml')
diff --git a/run.py b/run.py
index b9b0089..aa42c33 100644
--- a/run.py
+++ b/run.py
@@ -1,4 +1,4 @@
-#!/usr/bin/python
+#!/usr/bin/env python
 
 from opendm import log
 from opendm import config
